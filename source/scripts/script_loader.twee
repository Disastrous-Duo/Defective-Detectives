:: script loader [script]

/*
	External script loading module.
*/
window.requestScriptLoad = function (options) {
		if (options == null || typeof options !== 'object' || !options.src) {
			return;
		}

		var
			opts   = Object.assign({ parent : document.head }, options),
			script = document.createElement('script');

		function onLoadOnce(evt) {
			opts.onload.call(evt.target, evt);
			script.removeEventListener('load', onLoadOnce);
		}

		script.id   = opts.id;
		script.src  = opts.src;
		script.type = 'text/javascript';

		if (typeof opts.onload === 'function') {
			script.addEventListener('load', onLoadOnce, false);
		}

		opts.parent.appendChild(script);
	};

function loadFont(font, callback) {
var myfont = new FontFaceObserver(font)
myfont.load()
	.then(callback).catch(function(e) {
		console.log('font loading failed ' + font);
		console.log(e);
	});
}


/*
	Load your external scripts here.
*/
// Example of loading `moment.min.js` locally.
/*
requestScriptLoad({
	id     : 'fabric-js',
	src    : './source/scripts/fabric.js.txt',
	onload : function (evt) {

		// will be called when the script is loaded

	}
});
*/


// Example of loading `moment.min.js` from a CDN.
// requestScriptLoad({
// 	id     : 'lib-moment-js',
// 	src    : 'https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.15.0/moment.min.js',
// 	onload : function (evt) {
// 		/* library is loaded, do something */
// 	}
// });



requestScriptLoad({
	id     : 'fabric-js',
	src    : './source/libs/fabric.js.txt',
	onload : function (evt) {

		// Load the handwritten font on notes before laoding boards
		loadFont("Caveat-Regular", load_boards);


	}
});


function load_boards()
{
	let boards_id = ["conspiracy_board","tutorial_board"];
	boards_id.map(id => window[id].init_board())
}
